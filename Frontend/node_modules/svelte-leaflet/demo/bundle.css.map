{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../demo.svelte",
    "../map.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport {\n\t\tLeafletMap,\n\t\tLeafletMarker,\n\t\tLeafletPopup,\n\t\tLeafletTooltip,\n\t\tLeafletTileLayer,\n\t} from \"../src/\";\n\n\timport { toLatLng } from \"leaflet/src/geo/LatLng.js\";\n\n\tlet markerVisible = true;\n\tlet markerName = \"Null Island\";\n\tlet markerLatLng = toLatLng([0, 0]);\n\n\tlet mapOptions = {};\n\tlet mapCenter, mapZoom;\n\n\tlet map;\n</script>\n\n<style>\n\tfieldset {\n\t\tposition: absolute;\n\t\twidth: 20vw;\n\t}\n\tlabel {\n\t\tdisplay: block;\n\t}\n</style>\n\n<fieldset>\n\t<label>\n\t\t<input type=\"checkbox\" bind:checked={markerVisible} />\n\t\tdisplay marker\n\t</label>\n\t<label>\n\t\tPopup content:\n\t\t<input type=\"text\" bind:value={markerName} />\n\t</label>\n\t<label>\n\t\tLatitude:\n\t\t<input type=\"number\" bind:value={markerLatLng.lat} />\n\t</label>\n\t<label>\n\t\tLongitude:\n\t\t<input type=\"number\" bind:value={markerLatLng.lng} />\n\t</label>\n\t<p>Map center: {mapCenter}</p>\n\t<p>Map zoom: {mapZoom}</p>\n</fieldset>\n<LeafletMap\n\tstyle=\"height:90vh; width: 80vw; position:absolute; left:20vw;\"\n\tbind:center={mapCenter}\n\tbind:zoom={mapZoom}\n\tbind:map>\n\t<LeafletTileLayer\n\t\turl={'https://a.tile.openstreetmap.org/{z}/{x}/{y}.png'}\n\t\toptions={{ attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>' }} />\n\t{#if markerVisible}\n\t\t<LeafletMarker bind:latLng={markerLatLng} options={{ draggable: true }}>\n\t\t\t<LeafletPopup options={{ closeButton: false, closeOnClick: false }}>\n\t\t\t\t{markerName}\n\t\t\t</LeafletPopup>\n\t\t\t<LeafletTooltip options={{ permanent: true }}>\n\t\t\t\t{markerName}\n\t\t\t</LeafletTooltip>\n\t\t</LeafletMarker>\n\t{/if}\n</LeafletMap>\n",
    "<script>\n\timport { create, getStyle } from \"leaflet/src/dom/DomUtil.js\";\n\timport { Map, createMap } from \"leaflet/src/map/Map.js\";\n\n\t// Import not only the map, but the stuff we consider \"default\" in a Leaflet map:\n\t// - Map interactivity handlers (drag pan, scroll zoom, etc)\n\t// - Zoom control, attribution control\n\t// (It's possible to create a Leaflet map without importing those, but since\n\t// they are activated by default due to map options)\n\timport { BoxZoom } from \"leaflet/src/map/handler/Map.BoxZoom\";\n\tMap.BoxZoom = BoxZoom;\n\timport { DoubleClickZoom } from \"leaflet/src/map/handler/Map.DoubleClickZoom\";\n\tMap.DoubleClickZoom = DoubleClickZoom;\n\timport { Drag } from \"leaflet/src/map/handler/Map.Drag\";\n\tMap.Drag = Drag;\n\timport { Keyboard } from \"leaflet/src/map/handler/Map.Keyboard\";\n\tMap.Keyboard = Keyboard;\n\timport { ScrollWheelZoom } from \"leaflet/src/map/handler/Map.ScrollWheelZoom\";\n\tMap.ScrollWheelZoom = ScrollWheelZoom;\n\timport { Tap } from \"leaflet/src/map/handler/Map.Tap\";\n\tMap.Tap = Tap;\n\timport { TouchZoom } from \"leaflet/src/map/handler/Map.TouchZoom\";\n\tMap.TouchZoom = TouchZoom;\n\n\timport { Zoom as ZoomControl } from \"leaflet/src/control/Control.Zoom.js\";\n\timport { Attribution as AttributionControl } from \"leaflet/src/control/Control.Attribution.js\";\n\n\t/// FIXME: Is there a way for Svelte to import the Leaflet CSS and include\n\t/// it in the component's CSS output?\n\t// The interim solution is to add something to <svelte:head> :-| and then\n\t// poll to check when it has loaded :-(\n\t// \timport \"leaflet/dist/leaflet.css\";\n\n\timport { setContext, onMount, onDestroy } from \"svelte\";\n\n\texport let style = \"\";\n\tlet mapContainer;\n\n\texport let center = [0, 0];\n\texport let zoom = 1;\n\n\texport let options = {\n\t\tcenter,\n\t\tzoom,\n\t};\n\n\tlet internalContainer = create(\"div\");\n\tinternalContainer.style.minWidth = \"32px\";\n\tinternalContainer.style.minHeight = \"32px\";\n\texport let map = createMap(internalContainer, options);\n\tsetContext(\"leafletMapInstance\", map);\n\n\tonMount(() => {\n\t\tpollCssLoaded();\n\t});\n\n\tonDestroy(() => map.remove());\n\n\t// \tlet onResize = map.invalidateSize;\n\tfunction onResize() {\n\t\t// \t\tconsole.log(ev);\n\t\tmap.invalidateSize();\n\t}\n\n\tmap.on(\"move\", () => (center = map.getCenter()));\n\tmap.on(\"zoom\", () => (zoom = map.getZoom()));\n\t$: map.panTo(center);\n\t$: map.setZoom(zoom);\n\n\t// Since the CSS is loaded async'ly in <svelte:head> with no clear way of\n\t// knowing when it has been loaded, poll for the styles before invalidating\n\t// the map's size to re-position all layers.\n\t// Failing to do this would result in popups being horizontally misplaced, as the\n\t// contentWidth of the popup/tooltip contents would be calculated prior to the\n\t// popup styles being loaded, which means potentially way wider than it should.\n\tlet pollRetries = 50;\n\tfunction pollCssLoaded() {\n\t\tvar el = create(\"div\", \"leaflet-default-icon-path\", document.body);\n\t\tvar path =\n\t\t\tgetStyle(el, \"background-image\") || getStyle(el, \"backgroundImage\"); // IE8\n\t\tdocument.body.removeChild(el);\n\n\t\tif (pollRetries < 0 || (path && path != \"none\")) {\n\t\t\tvar c = map.getContainer();\n\t\t\tmapContainer.appendChild(c);\n\t\t\tc.style.width = \"100%\";\n\t\t\tc.style.height = \"100%\";\n\t\t\tmap.invalidateSize();\n\t\t} else {\n\t\t\tpollRetries--;\n\t\t\tsetTimeout(pollCssLoaded, 30);\n\t\t}\n\t}\n</script>\n\n<style>\n\t.map {\n\t\theight: 100vh;\n\t\twidth: 100vw;\n\t}\n</style>\n\n<svelte:head>\n\t<link\n\t\trel=\"stylesheet\"\n\t\thref=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.css\"\n\t\tintegrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\"\n\t\tcrossorigin=\"\" />\n\t<!-- \t<link rel=\"stylesheet\" href=\"leaflet/dist/leaflet.css\"/> -->\n\t<!-- \t<link rel=\"stylesheet\" href=\"../node_modules/leaflet/dist/leaflet.css\" /> -->\n</svelte:head>\n<div class=\"map\" {style} bind:this={mapContainer} on:resize={onResize}>\n\t<slot />\n</div>\n"
  ],
  "names": [],
  "mappings": "AAsBC,QAAQ,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,AACZ,CAAC,AACD,KAAK,cAAC,CAAC,AACN,OAAO,CAAE,KAAK,AACf,CAAC;ACoED,IAAI,cAAC,CAAC,AACL,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,AACb,CAAC"
}